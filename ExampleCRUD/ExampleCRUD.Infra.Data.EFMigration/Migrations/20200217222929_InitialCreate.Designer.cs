// <auto-generated />
using System;
using ExampleCRUD.Infra.Data.EFMigration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExampleCRUD.Infra.Data.EFMigration.Migrations
{
    [DbContext(typeof(EFMigrationDbContext))]
    [Migration("20200217222929_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExampleCRUD.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Actived")
                        .HasColumnType("bit");

                    b.Property<string>("AddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Actived = true,
                            AddressCity = "Santos",
                            AddressNumber = "123",
                            AddressState = "SP",
                            AddressStreet = "Rua das Mares",
                            AddressZipCode = "05589458",
                            BirthDate = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CpfCnpj = "90252253060",
                            Created = new DateTime(2020, 2, 17, 19, 29, 29, 469, DateTimeKind.Local).AddTicks(2455),
                            Email = "josedasilva@email.com",
                            Name = "Jose da Silva"
                        },
                        new
                        {
                            Id = 2L,
                            Actived = true,
                            AddressCity = "Manaus",
                            AddressNumber = "123",
                            AddressState = "AM",
                            AddressStreet = "Rua Caiapó",
                            AddressZipCode = "77788858",
                            BirthDate = new DateTime(1975, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CpfCnpj = "18453944024",
                            Created = new DateTime(2020, 2, 17, 19, 29, 29, 470, DateTimeKind.Local).AddTicks(816),
                            Email = "mariajoseantunes@emailtest.com",
                            Name = "Maria Jose Antunes"
                        },
                        new
                        {
                            Id = 3L,
                            Actived = true,
                            AddressCity = "São Paulo",
                            AddressNumber = "85",
                            AddressState = "SP",
                            AddressStreet = "Av. Paulista",
                            AddressZipCode = "99999558",
                            BirthDate = new DateTime(1987, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CpfCnpj = "58757311099",
                            Created = new DateTime(2020, 2, 17, 19, 29, 29, 470, DateTimeKind.Local).AddTicks(868),
                            Email = "mohamedli@testemail.com",
                            Name = "Mohamed Li"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
